{"version":3,"sources":["components/Prompt.js","components/StartPage.js","components/InventoryItemCard.js","components/InventoryGrid.js","components/Timer.js","components/CreativeRound.js","components/MyComponentWithSound.js","App.js","index.js"],"names":["customerPix","Array","Prompt","players","imgAr","path","playerObjects","judgeIndex","parts","setTimeLeft","criteria","judgeName","setIsTimer","name","src","process","Math","floor","random","length","className","alt","Name","to","Button","onClick","console","log","introPix","StartPage","handlePlayerChange","setNameInput","nameInput","handleNameSubmit","playerNames","setJudgeName","Form","onChange","event","target","value","handleNameInputChange","Group","controlId","Label","Control","type","placeholder","preventDefault","handleClick","map","player","index","key","InventoryItemCard","component","Attachments","Card","style","width","Img","fluid","height","variant","url","Body","Text","fontSize","InventoryGrid","Container","Row","Col","components","Timer","seconds","useState","timeLeft","useEffect","intervalId","setInterval","clearInterval","CreativeRound","timerCounter","handleRestartGame","handleRestartClick","compVals","Set","i","rand","add","has","boxMaker","MyComponentWithSound","playStatus","Sound","status","PLAYING","playFromPosition","onLoading","this","handleSongLoading","onPlaying","handleSongPlaying","onFinishedPlaying","handleSongFinishedPlaying","loop","React","Component","App","setPlayerObjects","setJudgeIndex","setPlayerNames","setParts","setComponents","setCriteria","axios","get","then","res","data","part","newPart","newComponent","newCriteria","newPlayerObject","score","exact","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ecd6a1b4.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button } from 'react-bootstrap'\n\n\n//todo:\n//-generate prompt from airtable randomw rows; \"I need a __(part)__ that __(criteria)__\"\n//-display a random prompt image\n//-indicate which player is the judge\n\nvar customerPix = new Array(\"RDE-001C.BMP\", \"KFR-010B.BMP\", \"GBR-505C.BMP\", \"GLB-031C.BMP\", \"CTD-012C.BMP\", \"DZI-323C.BMP\", \"ISLANDS.BMP\", \"GBR-504C.BMP\", \"KFR-011B.BMP\", \"FUTURGAL.BMP\", \"KFR-007B.BMP\", \"EDW-147C.BMP\", \"MCG-508C.BMP\", \"RHT-013C.BMP\", \"MCG-411C.BMP\", \"LAL-017C.BMP\", \"GREENSHP.BMP\", \"GBR-515C.BMP\", \"DRM-00~1.BMP\", \"DLN-101C.BMP\", \"BHB-069B.BMP\", \"MCG-518C.BMP\", \"DLA-006C.BMP\", \"BEL-102C.BMP\", \"CWL-004B.BMP\", \"LAL-016C.BMP\", \"GBR-538B.BMP\", \"HANGAR.BMP\", \"MCG-413C.BMP\", \"EDW-066B.BMP\", \"AMC-103C.BMP\", \"JLQ-253C.BMP\", \"LTF-015B.BMP\", \"RHT-016C.BMP\", \"KFR-015C.BMP\", \"CYH-010B.BMP\", \"DLA-008C.BMP\", \"LAL-014C.BMP\", \"CWL-006B.BMP\", \"DLN-105C.BMP\", \"HRD-052C.BMP\", \"HJL-016C.BMP\", \"CHN-003C.BMP\", \"KFR-008B.BMP\", \"AMC-020C.BMP\", \"HJL-017C.BMP\", \"RBP-002C.BMP\", \"GBR-025C.BMP\", \"RMO-011C.BMP\", \"KFR-013B.BMP\");\nfunction getRandomImage(imgAr, path) {\n    path = path || '/images/'; // default path here\n    var num = Math.floor( Math.random() * imgAr.length );\n    var img = imgAr[ num ];\n    var imgStr = process.env.PUBLIC_URL + path + img;\n    return imgStr;\n}\n\n\nconst Prompt = ({ players, playerObjects, judgeIndex, setTimeLeft, parts, criteria, judgeName, setIsTimer }) => {\n\n  const grabRandomPart = () => {\n    if (parts){\n      return parts[Math.floor(Math.random() * parts.length)].Name\n    } else {\n      return 'Error'\n    }\n  }\n\n  const handleClick = () => {\n    console.log('clicked')\n  }\n\n  const grabRandomCriteria = () => {\n    if (criteria) {\n      return criteria[Math.floor(Math.random() * criteria.length)].Name\n    } else {\n      return 'Error'\n    }\n  }\n\n  return (\n    <>\n      <h5>The Judge is: {playerObjects[judgeIndex].name}</h5>\n      <img src={getRandomImage(customerPix, '/images/scenarios/')} className=\"App-logo\" alt=\"logo\" />\n      <h1>\n        I need a <span className='text-danger'>{grabRandomPart()}</span> that <span className='text-warning'>{grabRandomCriteria()}</span>.\n      </h1>\n      <div>\n        <Link to={process.env.PUBLIC_URL + '/components'}>\n          <Button onClick={() => handleClick()}>Start Game</Button>\n        </Link>\n      </div>\n    </>\n  )\n}\n export default Prompt\n","import React, { useState, useEffect } from 'react';\n\nimport { Button, Form } from 'react-bootstrap'\nimport { withRouter, Link } from 'react-router-dom'\n\n\nvar introPix = new Array(\"STATION.BMP\",\"TEMPLE.BMP\",\"ASTEROID.BMP\");\nfunction getRandomImage(imgAr, path) {\n    path = path || '/images/'; // default path here\n    var num = Math.floor( Math.random() * imgAr.length );\n    var img = imgAr[ num ];\n    var imgStr = process.env.PUBLIC_URL + path + img;\n    return imgStr;\n}\n\nconst StartPage = ({\n  handlePlayerChange,\n  players,\n  setNameInput,\n  nameInput,\n  handleNameSubmit,\n  playerNames,\n  playerObjects,\n  setJudgeName,\n  judgeIndex\n})=> {\n\n  const handleClickStart = () => {\n    console.log('clicked')\n    setJudgeName(playerObjects[judgeIndex].name)\n    // props.history.push('/prompt')\n  }\n\n  const handleClick = event => {\n    event.preventDefault()\n    handleNameSubmit(event)\n  }\n\n  const handleNameInputChange = event => {\n    setNameInput(event.target.value)\n  }\n\n  return (\n    <>\n    Space Station Gizmo Guy!\n      <img src={getRandomImage(introPix, '/images/intros/')} className=\"App-logo\" alt=\"logo\" />\n      <p></p>\n        <code>GGJ 2020</code>\n\n<p>Welcome to Space Station Gornath! What brings you this deep into the Omega Quadrant?\nAnyways, the rough conditions and remoteness of this region make this output an oasis for explorers. Most visitors have a need for repairs and upgrades.\nDue to this need multiple repair shops have emerged in the station, of varying quality…</p>\n\n<p>In this game you will take turns being the <u>repair shop owners</u> and <u>customers</u> with particular needs. </p>\n\n<p>As the <u>repair shop owner</u>, the sale is all that matters - the almighty space buck is king. You will need to work with what you have to engineer a solution and out-sell the rival shops. </p>\n\n<p>As the <u>customer</u>, you will decide which solution to purchase based on its ingenuity and how well it solves your problem. In these times, it doesn’t take much to get a ship, and most pilots aren’t experts in engineering.</p>\n\n<p>Get ready to craft some space stuff!</p>\n<p></p>\n<p></p>\n\n      <p>Add up to 5 Players</p>\n    {/* <Form onChange={event => handlePlayerChange(event)}>\n    <Form.Group controlId=\"exampleForm.ControlSelect2\">\n    <Form.Label>Select Number of Players</Form.Label>\n    <Form.Control as=\"select\" multiple>\n      <option>1</option>\n      <option>2</option>\n      <option>3</option>\n      <option>4</option>\n    </Form.Control>\n  </Form.Group>\n    </Form> */}\n    {playerObjects.length <= 4 ? <Form onChange={(event) => handleNameInputChange(event)}>\n      <Form.Group controlId=\"formBasicEmail\">\n        <Form.Label>player name</Form.Label>\n        <Form.Control value={nameInput} type=\"text\" placeholder=\"player name\" />\n        {/* <Form.Text className=\"text-muted\">\n          We'll never share your email with anyone else.\n        </Form.Text> */}\n        <Button type='submit' onClick={(event) => {event.preventDefault(); handleClick(event)}}>Add Player</Button>\n      </Form.Group>\n    </Form> : null}\n\n    <ul>\n      {playerObjects.map((player, index) => {\n        return (\n          <li key={index}>{player.name}</li>\n        )\n      })}\n      </ul>\n\n    <Link to={process.env.PUBLIC_URL + '/prompt'}>\n      <Button onClick={() => handleClickStart()}>Start Game</Button>\n    </Link>\n    </>\n  )\n}\n\nexport default StartPage\n","import React from 'react'\nimport { Card } from 'react-bootstrap'\n\nconst InventoryItemCard = ({ component }) => {\n  if (component.Attachments){\n    return (\n      <Card style={{ width: '8rem' }}>\n        <Card.Img fluid className='text-center' style={{ width: '100px', height: '100px'}} variant=\"top\" src={component.Attachments[0].url} />\n        <Card.Body>\n          <Card.Text style={{ fontSize: '13px'}} className='text-dark'>{component.Name}</Card.Text>\n          {/* <Card.Text>\n            {component.Name}\n          </Card.Text> */}\n          {/* <Button variant=\"primary\">Go somewhere</Button> */}\n        </Card.Body>\n      </Card>\n    )\n        }\n    return (\n      <>\n      </>\n    )\n  }\n\n\n\nexport default InventoryItemCard\n","import React from 'react'\nimport { Col, Row, Container } from 'react-bootstrap'\nimport InventoryItemCard from './InventoryItemCard'\n\nconst InventoryGrid = ({ player }) => {\n  console.log(player)\n  return (\n    <>\n      <h5>{player.name}</h5>\n      <Container >\n        <Row className='border border-light'>\n          <Col>\n            <InventoryItemCard component={player.components[0]}/>\n          </Col>\n          <Col>\n            <InventoryItemCard component={player.components[1]} />\n          </Col>\n          <Col>\n            <InventoryItemCard component={player.components[2]} />\n          </Col>\n        </Row>\n        <Row className='border border-light'>\n        <Col>\n            <InventoryItemCard component={player.components[3]}/>\n          </Col>\n          <Col>\n            <InventoryItemCard component={player.components[4]} />\n          </Col>\n          <Col>\n            <InventoryItemCard component={player.components[5]} />\n          </Col>\n        </Row>\n      </Container>\n    </>\n  )\n}\n\nexport default InventoryGrid\n","import React, {useState, useEffect } from 'react'\n\nconst Timer = ({ seconds }) => {\n  // initialize timeLeft with the seconds prop\n  const [timeLeft, setTimeLeft] = useState(seconds);\n\n  useEffect(() => {\n    // exit early when we reach 0\n    if (!timeLeft) return;\n\n    // save intervalId to clear the interval when the\n    // component re-renders\n    const intervalId = setInterval(() => {\n      setTimeLeft(timeLeft - 1);\n    }, 1000);\n\n    // clear interval on re-render to avoid memory leaks\n    return () => clearInterval(intervalId);\n    // add timeLeft as a dependency to re-rerun the effect\n    // when we update it\n  }, [timeLeft]);\n\n  return (\n    <div>\n      <h6>Time Left: {timeLeft}</h6>\n    </div>\n  );\n};\n\nexport default Timer\n","import React, { useState, useEffect } from 'react'\nimport { Container, Card, Jumbotron, Navbar, Button, Row, Col } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport InventoryItemCard from './InventoryItemCard'\nimport InventoryGrid from './InventoryGrid'\nimport Timer from './Timer'\n\nconst CreativeRound = ({ timerCounter, judgeName, handleRestartGame, handleRestartClick, players, playerNames, playerObjects, components, judgeIndex }) => {\n  const [componentArray, setComponentArray] = useState([])\n\n\n  console.log(playerObjects)\n  console.log(timerCounter)\n\n  const roundPlayers = playerObjects.map(player => {\n    var compVals = new Set()\n    for (let i = 0; i < 6; i++) {\n      var rand\n      do{\n        rand = Math.floor(Math.random() * components.length);\n        compVals.add(rand)\n      }while(!compVals.has(rand))\n      \n      player.components[i] = components[rand]\n    }\n  })\n\n  const boxMaker = (index) => {\n    if (playerObjects[index]){\n      if (judgeIndex !== index && !(judgeIndex < index)){\n        //do player index\n        return (<InventoryGrid player={playerObjects[index]}/>)\n      }else{\n        //do player index+1\n        if (playerObjects[index + 1]){\n          return (<InventoryGrid player={playerObjects[index+1]}/>)\n        } else {\n          return\n        }\n      }\n    } else {\n      return\n    }\n\n  }\n\n  return (\n    <>\n    <Row>\n      <Col>\n        <Timer seconds={120}/>\n      </Col>\n      <Col>\n        <h5>Judge: {playerObjects[judgeIndex].name}</h5>\n      </Col>\n      <Col>\n        <Link to={process.env.PUBLIC_URL + '/prompt'}>\n          <Button onClick={() => handleRestartClick()}>Next Round</Button>\n        </Link>\n      </Col>\n      <Col>\n        <Link to={process.env.PUBLIC_URL + '/'}>\n          <Button onClick={() => handleRestartGame()}>Restart Game</Button>\n        </Link>\n      </Col>\n    </Row>\n    <Container>\n      <Row>\n        <Col>\n          {boxMaker(0)}\n        </Col>\n        <Col>\n          {boxMaker(1)}\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          {boxMaker(2)}\n        </Col>\n        <Col>\n          {boxMaker(3)}\n        </Col>\n      </Row>\n    </Container>\n\n      {/* <Jumbotron>\n        {components.map((component, index) => {\n          if (index < 7) {\n            return (\n            <InventoryItemCard component={component} />\n            )\n          }\n        })}\n\n      </Jumbotron> */}\n      {/* {components.map(component => {\n        return <InventoryItemCard component={component} />      })} */}\n    </>\n\n  )\n}\n\nexport default CreativeRound\n","import React from 'react';\nimport Sound from 'react-sound';\n \n\nfunction getSound(name, path) {\n    path = path || '/music/'; // default path here\n    var soundStr = process.env.PUBLIC_URL + path + name;\n    return soundStr;\n}\n\n\nclass MyComponentWithSound extends React.Component {\n\n\n\n  render() {\n    return (\n    <Sound\n      url={getSound('SpaceJunk_demo.mp3')}\n      playStatus={Sound.status.PLAYING}\n      playFromPosition={0 /* in milliseconds */}\n      onLoading={this.handleSongLoading}\n      onPlaying={this.handleSongPlaying}\n      onFinishedPlaying={this.handleSongFinishedPlaying}\n      loop={true}\n    />\n  );\n  }\n}\nexport default MyComponentWithSound","import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Navbar, Form, Button, FormControl } from 'react-bootstrap'\nimport { BrowserRouter as Router,\n        Switch,\n        Route,\n      Link } from 'react-router-dom'\nimport Prompt from './components/Prompt'\nimport StartPage from './components/StartPage'\nimport CreativeRound from './components/CreativeRound'\nimport axios from 'axios'\nimport BackgroundMusic from './components/MyComponentWithSound'\nimport Timer from './components/Timer'\n\nfunction App() {\n  const [players, setPlayers] = useState(0)\n  const [playerObjects, setPlayerObjects] = useState([])\n  const [judgeIndex, setJudgeIndex] = useState(0)\n  const [judgeName, setJudgeName] = useState('No judge yet')\n  const [playerNames, setPlayerNames] = useState([])\n  const [parts, setParts] = useState([])\n  const [components, setComponents] = useState([])\n  const [criteria, setCriteria] = useState([])\n  const [nameInput, setNameInput] = useState('')\n  const [timeLeft, setTimeLeft] = useState(0);\n\n  useEffect(() => {\n    axios.get('https://guarded-ridge-39330.herokuapp.com/api/airtable/parts')\n        .then(res => {\n          console.log('Parts', res.data)\n          res.data.map(part => {\n            const newPart = part\n            setParts(parts => [...parts, newPart])\n          })\n        })\n\n    axios.get('https://guarded-ridge-39330.herokuapp.com/api/airtable/components')\n        .then(res => {\n          console.log('Components', res.data)\n          res.data.map(component => {\n            const newComponent = component\n            setComponents(components => [...components, newComponent])\n          })\n        })\n\n    axios.get('https://guarded-ridge-39330.herokuapp.com/api/airtable/criteria')\n          .then(res => {\n            console.log('Criteria', res.data)\n            res.data.map(criteria => {\n              if (criteria.Name) {\n                const newCriteria = criteria\n                setCriteria(criteria => [...criteria, newCriteria])\n              }\n            })\n          })\n\n  }, [])\n\n  const incrementJudge = () => {\n    if (judgeIndex >= playerObjects.length){\n      setJudgeIndex(0)\n    } else {\n      setJudgeIndex(judgeIndex + 1)\n    }\n  }\n\n  const handleRestartClick = () => {\n    incrementJudge()\n    if (playerObjects[judgeIndex]){\n      setJudgeName(playerObjects[judgeIndex].name)\n    }\n  }\n\n  const handleNameSubmit = event => {\n    console.log(event)\n    event.preventDefault()\n    if (nameInput !== ''){\n      const newPlayerObject = {\n        name: nameInput,\n        components: [],\n        score: 0\n      }\n      setPlayerObjects([...playerObjects, newPlayerObject])\n      setPlayerNames(playerNames => [...playerNames, nameInput])\n      setNameInput('')\n      event.target.value = ''\n      console.log('Player Objects:', playerObjects)\n    }\n  }\n\n  const handleRestartGame = () => {\n    setPlayerObjects([])\n  }\n\n  // const judgeName = () => {\n  //   if (playerObjects[judgeIndex]) {\n  //     return playerObjects[judgeIndex].Name\n  //   } else {\n  //     return 'No judge yet'\n  //   }\n  // }\n\n  // const handlePlayerChange = event => {\n  //   setPlayers(event.target.value)\n  // }\n  // six items\n  return (\n    <div className=\"App\">\n        {/* <Navbar className='sticky-top' bg=\"light\">\n          <Navbar.Brand href=\"#home\">Judge: {judgeName} </Navbar.Brand>\n        </Navbar> */}\n      <header className=\"App-header\">\n        <Router>\n          <Switch>\n            <Route exact path={process.env.PUBLIC_URL + \"/\"} render={() => {\n              return (\n                <StartPage\n                  players={players}\n                  // handlePlayerChange={handlePlayerChange}\n                  nameInput={nameInput}\n                  setNameInput={setNameInput}\n                  handleNameSubmit={handleNameSubmit}\n                  playerNames={playerNames}\n                  playerObjects={playerObjects}\n                  setJudgeName={setJudgeName}\n                  judgeIndex={judgeIndex}\n                  />\n              )}\n            }/>\n\n            <Route path={process.env.PUBLIC_URL + \"/prompt\"} render={() => {\n              return (\n                <Prompt\n                  players={players}\n                  parts={parts}\n                  criteria={criteria}\n                  playerNames={playerNames}\n                  playerObjects={playerObjects}\n                  setTimeLeft={setTimeLeft}\n                  judgeName={judgeName}\n                  judgeIndex={judgeIndex}\n                  />\n\n              )}\n            }/>\n            <Route path={process.env.PUBLIC_URL + \"/components\"} render={() => {\n              return (\n                <CreativeRound\n                  players={players}\n                  playerNames={playerNames}\n                  components={components}\n                  playerObjects={playerObjects}\n                  judgeIndex={judgeIndex}\n                  handleRestartClick={handleRestartClick}\n                  judgeName={judgeName}\n                  judgeIndex={judgeIndex}\n                  handleRestartGame={handleRestartGame}\n                  />\n              )\n              }}/>\n          </Switch>\n        </Router>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\nimport BackgroundMusic from './components/MyComponentWithSound'\n\n\nReactDOM.render(\n<BrowserRouter >\n  <App />\n  <BackgroundMusic />\n</BrowserRouter>, document.getElementById('root'));\n"],"sourceRoot":""}